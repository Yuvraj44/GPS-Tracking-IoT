#include <SoftwareSerial.h>
#include <TinyGPS++.h> 
#include <ESP8266WiFi.h>
#include <Wire.h>

#define gpsRxPin D3
#define gpsTxPin D4
SoftwareSerial neo6m(gpsTxPin, gpsRxPin);

TinyGPSPlus gps;

void send_event(const char *event);
const char *host = "maker.ifttt.com";
const char *privateKey = "cLeGfQuz1_ACyrske7z-XL"; 

String googleMapsURL = "";
       
const char *ssid = "";  // wifi name
const char *password = "";// wifi password

void setup()
{
  Serial.begin(115200);
  Serial.println();
  neo6m.begin(9600);

  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
}

void loop()
{
  smartdelay_gps(1000);
  
  if (gps.location.isValid()) 
  {
    googleMapsURL += "https://maps.google.com/?q=" + String(gps.location.lat(), 6) + "," + String(gps.location.lng(), 6);
    Serial.println(googleMapsURL);
    send_event("Get_Location");// Event name of IFTTT
    googleMapsURL = "",
    delay(10000);
  }
}

static void smartdelay_gps(unsigned long ms)
{
  unsigned long start = millis();
  do 
  {
    while (neo6m.available())
      gps.encode(neo6m.read());
  } while (millis() - start < ms);
}

void send_event(const char *event)
{
  Serial.print("Connecting to "); 
  Serial.println(host);

  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) 
  {
    Serial.println("Connection failed");
    return;
  }

  String url = "/trigger/";
  url += event;
  url += "/with/key/";
  url += privateKey;

  url += "?value1=";
  url += googleMapsURL;

  Serial.print("Requesting URL: ");
  Serial.println(url);
  
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");

  while(client.connected())
  {
    if(client.available())
    {
      String line = client.readStringUntil('\r');
      Serial.print(line);
    } else 
    {
      delay(50);
    }
  }
  
  Serial.println();
  Serial.println("closing connection");
  client.stop();
}
